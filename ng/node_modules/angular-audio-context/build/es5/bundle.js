(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('@angular/common'), require('@angular/core'), require('standardized-audio-context'), require('@babel/runtime/helpers/inherits'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf')) :
    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', '@angular/common', '@angular/core', 'standardized-audio-context', '@babel/runtime/helpers/inherits', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.angularAudioContext = {}, global._classCallCheck, global._createClass, global.common, global.i0, global.standardizedAudioContext, global._inherits, global._possibleConstructorReturn, global._getPrototypeOf));
}(this, (function (exports, _classCallCheck, _createClass, common, i0, standardizedAudioContext, _inherits, _possibleConstructorReturn, _getPrototypeOf) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);
    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);
    var _inherits__default = /*#__PURE__*/_interopDefaultLegacy(_inherits);
    var _possibleConstructorReturn__default = /*#__PURE__*/_interopDefaultLegacy(_possibleConstructorReturn);
    var _getPrototypeOf__default = /*#__PURE__*/_interopDefaultLegacy(_getPrototypeOf);

    function audioContextFactory(latencyHint) {
      return new standardizedAudioContext.AudioContext({
        latencyHint: latencyHint
      });
    }

    function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf__default['default'](Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf__default['default'](this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn__default['default'](this, result); }; }

    function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
    var AudioContextProxy = /*#__PURE__*/function (_AudioContext) {
      _inherits__default['default'](AudioContextProxy, _AudioContext);

      var _super = _createSuper(AudioContextProxy);

      function AudioContextProxy() {
        _classCallCheck__default['default'](this, AudioContextProxy);

        return _super.apply(this, arguments);
      }

      return AudioContextProxy;
    }(standardizedAudioContext.AudioContext);

    function isSupportedFactory() {
      return standardizedAudioContext.isSupported;
    }

    var latencyHintToken = new i0.InjectionToken('LATENCY_HINT');

    var isSupported = new i0.InjectionToken('IS_SUPPORTED_PROMISE');
    var AudioContextModule = /*#__PURE__*/function () {
      function AudioContextModule() {
        _classCallCheck__default['default'](this, AudioContextModule);
      }

      _createClass__default['default'](AudioContextModule, null, [{
        key: "forChild",
        value: function forChild() {
          return {
            ngModule: AudioContextModule
          };
        }
      }, {
        key: "forRoot",
        value: function forRoot(latencyHint) {
          return {
            ngModule: AudioContextModule,
            providers: [{
              deps: [latencyHintToken],
              provide: AudioContextProxy,
              useFactory: audioContextFactory
            }, {
              provide: latencyHintToken,
              useValue: latencyHint
            }]
          };
        }
      }]);

      return AudioContextModule;
    }();
    AudioContextModule.ɵmod = i0.ɵɵdefineNgModule({
      type: AudioContextModule
    });
    AudioContextModule.ɵinj = i0.ɵɵdefineInjector({
      factory: function AudioContextModule_Factory(t) {
        return new (t || AudioContextModule)();
      },
      providers: [{
        provide: isSupported,
        useFactory: isSupportedFactory
      }],
      imports: [[common.CommonModule]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AudioContextModule, {
        imports: [common.CommonModule]
      });
    })();

    exports.AudioContext = AudioContextProxy;
    exports.AudioContextModule = AudioContextModule;
    exports.isSupported = isSupported;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
