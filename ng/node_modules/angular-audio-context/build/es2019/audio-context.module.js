import { CommonModule } from '@angular/common';
import { InjectionToken, NgModule } from '@angular/core';
import { audioContextFactory } from './audio-context-factory';
import { AudioContextProxy } from './audio-context-proxy';
import { isSupportedFactory } from './is-supported-factory';
import { latencyHintToken } from './latency-hint-token';
import * as i0 from "@angular/core";
export { AudioContextProxy as AudioContext };
export const isSupported = new InjectionToken('IS_SUPPORTED_PROMISE');
export class AudioContextModule {
    static forChild() {
        return {
            ngModule: AudioContextModule
        };
    }
    static forRoot(latencyHint) {
        return {
            ngModule: AudioContextModule,
            providers: [
                { deps: [latencyHintToken], provide: AudioContextProxy, useFactory: audioContextFactory },
                { provide: latencyHintToken, useValue: latencyHint }
            ]
        };
    }
}
AudioContextModule.ɵmod = i0.ɵɵdefineNgModule({ type: AudioContextModule });
AudioContextModule.ɵinj = i0.ɵɵdefineInjector({ factory: function AudioContextModule_Factory(t) { return new (t || AudioContextModule)(); }, providers: [{ provide: isSupported, useFactory: isSupportedFactory }], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AudioContextModule, { imports: [CommonModule] }); })();
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(AudioContextModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                providers: [{ provide: isSupported, useFactory: isSupportedFactory }]
            }]
    }], null, null); })();
//# sourceMappingURL=audio-context.module.js.map